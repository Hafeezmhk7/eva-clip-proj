#!/bin/bash
#SBATCH --partition=gpu_h100
#SBATCH --gpus=1
#SBATCH --job-name=eva_clip_embeddings
#SBATCH --time=02:00:00
#SBATCH --output=./slurm_out/embeddings_%j.out
#SBATCH --error=./slurm_out/embeddings_%j.err
#SBATCH --mem=32GB
#SBATCH --cpus-per-task=8

# Exit if an error occurs
set -e

echo "üöÄ Starting EVA-CLIP Embedding Extraction Job"
echo "=============================================="
echo "Job ID: $SLURM_JOB_ID"
echo "Node: $SLURMD_NODENAME"
echo "Date: $(date)"
echo "Working directory: $(pwd)"

# Create output directory if it doesn't exist
mkdir -p slurm_out
mkdir -p embeddings

# Load modules
echo "üì¶ Loading modules..."
module purge
module load 2024
module load Miniconda3/24.7.1-0
module load CUDA/12.6.0

# Activate your conda environment
echo "üêç Activating conda environment..."
source activate eva_clip_env

# Check environment setup
echo "üîç Environment check:"
echo "   Python: $(which python)"
echo "   CUDA available: $(python -c 'import torch; print(torch.cuda.is_available())')"
echo "   GPU count: $(python -c 'import torch; print(torch.cuda.device_count())')"
echo "   GPU name: $(python -c 'import torch; print(torch.cuda.get_device_name(0) if torch.cuda.is_available() else \"No GPU\")')"

# Show memory and disk usage
echo "üíæ System resources:"
echo "   CPU cores: $SLURM_CPUS_PER_TASK"
echo "   Memory: $SLURM_MEM_PER_NODE MB"
echo "   Available disk: $(df -h . | tail -1 | awk '{print $4}')"

# Run the embedding extraction
echo ""
echo "üß† Starting embedding extraction..."
echo "=============================================="

python src/modules/extract_embeddings.py

# Check if extraction was successful
if [ $? -eq 0 ]; then
    echo ""
    echo "‚úÖ Embedding extraction completed successfully!"
    echo "üìÅ Output files:"
    ls -lh embeddings/
    echo "üìä Total size: $(du -sh embeddings/ | cut -f1)"
else
    echo "‚ùå Embedding extraction failed!"
    exit 1
fi

echo ""
echo "üéâ Job completed at: $(date)"
echo "‚è±Ô∏è Total runtime: $SECONDS seconds"