#!/bin/bash
#SBATCH --partition=gpu_h100
#SBATCH --gpus=1
#SBATCH --job-name=blip3o_extract_chunked
#SBATCH --time=24:00:00
#SBATCH --output=./slurm_out/extract_only_patch_50shard.out
#SBATCH --error=./slurm_out/extract_only_patch_50shard.err
#SBATCH --mem=64GB
#SBATCH --cpus-per-task=8
#SBATCH --nodes=1
#SBATCH --ntasks-per-node=1

echo "üöÄ Starting BLIP3-o Embedding Extraction"
echo "Job ID: $SLURM_JOB_ID"
echo "Node: $SLURMD_NODENAME"
echo "Date: $(date)"
echo ""

# Environment setup
module purge
module load 2024
module load Miniconda3/24.7.1-0
module load CUDA/12.6.0
source activate eva_clip_env

export SCRATCH_SHARED="/scratch-shared"
export SCRATCH_LOCAL="/scratch-local"

export BLIP3O_USER=$(whoami)
export BLIP3O_JOB_ID=${SLURM_JOB_ID}
export BLIP3O_WORKSPACE="/scratch-shared/${BLIP3O_USER}/blip3o_workspace"
export BLIP3O_DATASETS="${BLIP3O_WORKSPACE}/datasets"
export BLIP3O_EMBEDDINGS="${BLIP3O_WORKSPACE}/embeddings"
export BLIP3O_CHECKPOINTS="${BLIP3O_WORKSPACE}/checkpoints"
export BLIP3O_LOGS="${BLIP3O_WORKSPACE}/logs"

export BLIP3O_JOB_TEMP="/scratch-local/${BLIP3O_USER}.${BLIP3O_JOB_ID}/blip3o_job_${BLIP3O_JOB_ID}"
export BLIP3O_CACHE="${BLIP3O_JOB_TEMP}/cache"
export BLIP3O_WORKING="${BLIP3O_JOB_TEMP}/working"

mkdir -p "${BLIP3O_WORKSPACE}"/{datasets,embeddings,checkpoints,logs,metadata}
mkdir -p "${BLIP3O_JOB_TEMP}"/{cache,working,temp_checkpoints}
export TORCH_HOME="${BLIP3O_CACHE}/torch"
export HF_HOME="${BLIP3O_CACHE}/huggingface"
export TRANSFORMERS_CACHE="${BLIP3O_CACHE}/transformers"
export WANDB_DIR="${BLIP3O_LOGS}/wandb"
mkdir -p "${TORCH_HOME}" "${HF_HOME}" "${TRANSFORMERS_CACHE}" "${WANDB_DIR}"

export BLIP3O_TEMP_DIR="${BLIP3O_JOB_TEMP}"

# Run extraction directly with chosen arguments. Example values are set below:
# --include_cls      for cls_patch mode (257 tokens)
# omit --include_cls for patch_only mode (256 tokens)
# --max_shards N     to limit number of shards
# --batch_size N     to set batch size

python src/modules/extract_embeddings_g.py --max_shards 50 --batch_size 64

EXTRACTION_EXIT_CODE=$?
if [ $EXTRACTION_EXIT_CODE -ne 0 ]; then
    echo "‚ùå Extraction failed with exit code: $EXTRACTION_EXIT_CODE"
    exit 1
fi

echo "‚úÖ Extraction completed!"

# The rest of your job file (validation, cleanup, etc.) goes here as needed...
