#!/bin/bash
#SBATCH --job-name=coco_embedding_extraction_fixed
#SBATCH --partition=gpu_h100
#SBATCH --nodes=1
#SBATCH --gpus=1
#SBATCH --cpus-per-gpu=18
#SBATCH --time=4:00:00
#SBATCH --mem=0
#SBATCH --output=./slurm_out/extract_fixed_%j.out
#SBATCH --error=./slurm_out/extract_fixed_%j.err

# =============================================================================
# CONFIGURATION
# =============================================================================

# Paths
MODEL_PATH="/scratch-shared/scur2711/blip3o_workspace/checkpoints/blip3o_multi_gpu_fixed_cosine_13170504_20250716_034251"
COCO_ROOT="./data/coco"

# Settings
NUM_SAMPLES=1000
BATCH_SIZE=8
DEVICE="cuda"
RANDOM_SEED=42

# =============================================================================
# ENVIRONMENT SETUP
# =============================================================================

module purge
module load 2024
module load Miniconda3/24.7.1-0
module load CUDA/12.6.0

source activate eva_clip_env

export USER=$(whoami)
export JOB_ID=${SLURM_JOB_ID}
export WORKSPACE="/scratch-shared/${USER}/blip3o_workspace"

# Job temp for caches only
export JOB_TEMP="/scratch-local/${USER}.${JOB_ID}/extraction_${JOB_ID}"
export TORCH_HOME="${JOB_TEMP}/cache/torch"
export HF_HOME="${JOB_TEMP}/cache/huggingface"
export TRANSFORMERS_CACHE="${JOB_TEMP}/cache/transformers"

mkdir -p "${JOB_TEMP}" "${TORCH_HOME}" "${HF_HOME}" "${TRANSFORMERS_CACHE}"
mkdir -p ./slurm_out

# =============================================================================
# PATH VERIFICATION
# =============================================================================

if [ ! -d "$MODEL_PATH" ]; then
    echo "ERROR: Model not found: $MODEL_PATH"
    exit 1
fi

if [ ! -d "$COCO_ROOT" ]; then
    echo "ERROR: COCO dataset not found: $COCO_ROOT"
    exit 1
fi

echo "Model: $MODEL_PATH"
echo "COCO: $COCO_ROOT"
echo "Samples: $NUM_SAMPLES"

# =============================================================================
# FIXED EMBEDDING EXTRACTION
# =============================================================================

echo "Starting fixed embedding extraction..."

EXTRACTION_START_TIME=$(date +%s)

python extract_coco_embeddings.py \
    --blip3o_model_path "$MODEL_PATH" \
    --coco_root "$COCO_ROOT" \
    --num_samples $NUM_SAMPLES \
    --batch_size $BATCH_SIZE \
    --device $DEVICE \
    --random_seed $RANDOM_SEED \
    --save_raw_embeddings \
    --debug_alignment \
    --verbose

EXTRACTION_EXIT_CODE=$?
EXTRACTION_END_TIME=$(date +%s)
EXTRACTION_DURATION=$((EXTRACTION_END_TIME - EXTRACTION_START_TIME))

# =============================================================================
# VERIFICATION
# =============================================================================

if [ $EXTRACTION_EXIT_CODE -eq 0 ]; then
    echo "Extraction completed successfully"
    echo "Duration: ${EXTRACTION_DURATION} seconds"
    
    # Find latest embedding file
    EMBEDDINGS_DIR="$WORKSPACE/embeddings/coco_val_evaluation_FIXED"
    if [ -d "$EMBEDDINGS_DIR" ]; then
        LATEST_EMBEDDING=$(find "$EMBEDDINGS_DIR" -name "coco_val_embeddings_FIXED_*.pkl" -type f -printf '%T@ %p\n' | sort -n | tail -1 | cut -d' ' -f2-)
        
        if [ -n "$LATEST_EMBEDDING" ] && [ -f "$LATEST_EMBEDDING" ]; then
            echo "Found embeddings: $LATEST_EMBEDDING"
            
            # Run verification
            echo "Running verification..."
            python quick_evaluation.py \
                --embeddings_file "$LATEST_EMBEDDING" \
                --skip_normalization \
                --debug
            
            VERIFICATION_EXIT_CODE=$?
            
            if [ $VERIFICATION_EXIT_CODE -eq 0 ]; then
                echo "SUCCESS: Extraction and verification completed"
                echo "Embedding file: $LATEST_EMBEDDING"
                OVERALL_SUCCESS=true
            else
                echo "WARNING: Verification failed"
                OVERALL_SUCCESS=false
            fi
        else
            echo "WARNING: Could not find embedding file"
            OVERALL_SUCCESS=false
        fi
    else
        echo "WARNING: Embeddings directory not found"
        OVERALL_SUCCESS=false
    fi
else
    echo "ERROR: Extraction failed with exit code: $EXTRACTION_EXIT_CODE"
    OVERALL_SUCCESS=false
fi

# =============================================================================
# CLEANUP
# =============================================================================

if [ -d "$JOB_TEMP" ]; then
    rm -rf "$JOB_TEMP"
fi

# =============================================================================
# SUMMARY
# =============================================================================

TOTAL_DURATION=$SECONDS

echo ""
echo "Job ID: $SLURM_JOB_ID"
echo "Node: $SLURMD_NODENAME"
echo "Total runtime: $TOTAL_DURATION seconds"

if [ "$OVERALL_SUCCESS" = "true" ]; then
    echo "Status: SUCCESS"
    exit 0
else
    echo "Status: FAILED"
    exit 1
fi